worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    # Upstream servers for services
    upstream auth {
        server auth:3001;  # Use the service name instead of localhost
    }

    upstream posts {
        server post:3002;  # Use the service name instead of localhost
    }

    upstream notifications {
        server notification:5003;  # Use the service name instead of localhost
    }

    server {
        listen 80;

        # Enable CORS
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Credentials true;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range";

        # Handle preflight requests for CORS
        if ($request_method = OPTIONS) {
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Credentials true;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range";
            return 204;
        }

        # Route for Auth Service
        location /api/auth/ {
            proxy_pass http://auth;  # Use the service name (auth) to connect
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Route for Posts Service
        location /api/posts/ {
            proxy_pass http://posts;  # Use the service name (post) to connect
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Route for Notifications Service
        location /api/notifications/ {
            proxy_pass http://notifications;  # Use the service name (notification) to connect
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Default catch-all for undefined routes
        location / {
            return 404 "Route not found.\n";
        }
    }
}
